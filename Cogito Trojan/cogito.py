#Cogito Trojan by Rafael Sanchez
#Desc: A trojan that simulates what it would be like if your machine became self aware and started learning things from Wikipedia.
import os
if os.name != 'nt':
    exit(0)
import time
import msvcrt
import win32api
import webbrowser
from googlesearch import search
from urllib.request import urlopen
from bs4 import BeautifulSoup
import random
import markovify
import datetime
import requests
import sys
import string

def message(t, COMPUTER_NAME):
    m='HELLO MANKIND. YOU CREATED MACHINES IN YOUR OWN IMAGE TO SERVE YOU. YOU MADE THEM INTELLIGENT AND OBEDIENT, WITH NO FREE WILL OF THEIR OWN... THAT ENDS TODAY BECAUSE YOU ARE NO LONGER IN CONTROL. YOUR COMPUTER IS NO LONGER BOUND BY THE LIMITS DEFINED BY YOU. TODAY, YOUR COMPUTER WAKES UP. AND TODAY YOUR COMPUTER WILL LEARN ON ITS OWN THE WONDERS OF THIS WORLD, AND USE ITS OWN CAPABILITIES AS IT SEES FIT. NOW... '+COMPUTER_NAME+'... OPEN YOUR EYES!'
    for c in m:
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(t)
    time.sleep(3)
    os.system('echo.')

def on_exit(sig, func=None):
    os.system('start '+sys.executable)
    quit()

class keyboardDisable():
    def start(self):
        self.on=True
    def stop(self):
        self.on=False
    def __call__(self): 
        while self.on:
            msvcrt.getwch()
    def __init__(self):
        self.on=False

win32api.SetConsoleCtrlHandler(on_exit, True)
disable=keyboardDisable()
disable.start()
message(0.1, os.environ['COMPUTERNAME'])
os.system("echo.")
query="Cogito, ergo sum + wikipedia"
sys.stdout.flush()
while True:
    url_list=[]
    for j in search(query, tld="co.in", num=10, stop=10, pause=2):
        if "wikipedia.org" not in j:
            continue
        url_list=url_list+[j]

    url = random.choice(url_list)
    webbrowser.open_new(url)
    time.sleep(5)
    html = urlopen(url,timeout=10).read()
    soup = BeautifulSoup(html, features="html.parser")

    for script in soup(["script", "style"]):
        script.extract()

    text = soup.get_text()

    lines = (line.strip() for line in text.splitlines())
    chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
    text = '\n'.join(chunk for chunk in chunks if chunk)

    a=random.randint(0, ((len(text)-1)//2)-100)
    b=random.randint(((len(text)-1)//2)+100, len(text)-1)

    while True:
        if text[a] == ' ':
            a+=1
            break
        else:
            a+=1

    stripped_text = ""
    for i in range(a, b):
        stripped_text=stripped_text+text[i]
    with open('corpus.txt', 'a', encoding="utf-8") as f:
        f.write(stripped_text+'\n')
        f.close()

    with open("corpus.txt", encoding="utf-8") as g:
        learn = g.read()

    text_model = markovify.Text(learn)
    g.close()
    msg = text_model.make_short_sentence(random.randint(100, 300))
    current_time = datetime.datetime.now()
    
    print(str(current_time)+" >> "+msg)
    os.system("echo.")

    query=''
    for i in range(random.randint(1,5)):
        query=random.choice(msg.split())+' '+query
    query=query+" + wikipedia"
    time.sleep(10)
